// Code generated by protoc-gen-go. DO NOT EDIT.
// source: runtime/runtime.proto

package runtime

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Resource struct {
	Namespace            *Namespace     `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Networkpolicy        *NetworkPolicy `protobuf:"bytes,2,opt,name=networkpolicy,proto3" json:"networkpolicy,omitempty"`
	Service              *Service       `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{0}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetNamespace() *Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Resource) GetNetworkpolicy() *NetworkPolicy {
	if m != nil {
		return m.Networkpolicy
	}
	return nil
}

func (m *Resource) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

type Namespace struct {
	// name of the namespace
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Namespace) Reset()         { *m = Namespace{} }
func (m *Namespace) String() string { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()    {}
func (*Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{1}
}

func (m *Namespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Namespace.Unmarshal(m, b)
}
func (m *Namespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Namespace.Marshal(b, m, deterministic)
}
func (m *Namespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Namespace.Merge(m, src)
}
func (m *Namespace) XXX_Size() int {
	return xxx_messageInfo_Namespace.Size(m)
}
func (m *Namespace) XXX_DiscardUnknown() {
	xxx_messageInfo_Namespace.DiscardUnknown(m)
}

var xxx_messageInfo_Namespace proto.InternalMessageInfo

func (m *Namespace) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NetworkPolicy struct {
	// the labels allowed ingress by this policy
	Allowedlabels map[string]string `protobuf:"bytes,1,rep,name=allowedlabels,proto3" json:"allowedlabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// name of the network policy
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// namespace the network policy belongs to
	Namespace            string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkPolicy) Reset()         { *m = NetworkPolicy{} }
func (m *NetworkPolicy) String() string { return proto.CompactTextString(m) }
func (*NetworkPolicy) ProtoMessage()    {}
func (*NetworkPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{2}
}

func (m *NetworkPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkPolicy.Unmarshal(m, b)
}
func (m *NetworkPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkPolicy.Marshal(b, m, deterministic)
}
func (m *NetworkPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkPolicy.Merge(m, src)
}
func (m *NetworkPolicy) XXX_Size() int {
	return xxx_messageInfo_NetworkPolicy.Size(m)
}
func (m *NetworkPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkPolicy proto.InternalMessageInfo

func (m *NetworkPolicy) GetAllowedlabels() map[string]string {
	if m != nil {
		return m.Allowedlabels
	}
	return nil
}

func (m *NetworkPolicy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkPolicy) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type Service struct {
	// name of the service
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// version of the service
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// git url of the source
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	// service metadata
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// status of the service
	Status               int32    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{3}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Service) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Service) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Service) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type CreateOptions struct {
	// command to pass in
	Command []string `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"`
	// args to pass into command
	Args []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	// environment to pass in
	Env []string `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty"`
	// output to send to
	Output string `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	// create type of service
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// image to use
	Image string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	// namespace to create the service in
	Namespace string `protobuf:"bytes,7,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// secrets to use for the service
	Secrets map[string]string `protobuf:"bytes,8,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// entrypoint within the source
	Entrypoint string `protobuf:"bytes,9,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	// volumes to mount
	Volumes              map[string]string `protobuf:"bytes,10,rep,name=volumes,proto3" json:"volumes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateOptions) Reset()         { *m = CreateOptions{} }
func (m *CreateOptions) String() string { return proto.CompactTextString(m) }
func (*CreateOptions) ProtoMessage()    {}
func (*CreateOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{4}
}

func (m *CreateOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOptions.Unmarshal(m, b)
}
func (m *CreateOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOptions.Marshal(b, m, deterministic)
}
func (m *CreateOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOptions.Merge(m, src)
}
func (m *CreateOptions) XXX_Size() int {
	return xxx_messageInfo_CreateOptions.Size(m)
}
func (m *CreateOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOptions proto.InternalMessageInfo

func (m *CreateOptions) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *CreateOptions) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *CreateOptions) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *CreateOptions) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *CreateOptions) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateOptions) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CreateOptions) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateOptions) GetSecrets() map[string]string {
	if m != nil {
		return m.Secrets
	}
	return nil
}

func (m *CreateOptions) GetEntrypoint() string {
	if m != nil {
		return m.Entrypoint
	}
	return ""
}

func (m *CreateOptions) GetVolumes() map[string]string {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type CreateRequest struct {
	Resource             *Resource      `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Options              *CreateOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{5}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *CreateRequest) GetOptions() *CreateOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type CreateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{6}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

type ReadOptions struct {
	// service name
	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// version of the service
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// type of service
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// namespace of the service
	Namespace            string   `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadOptions) Reset()         { *m = ReadOptions{} }
func (m *ReadOptions) String() string { return proto.CompactTextString(m) }
func (*ReadOptions) ProtoMessage()    {}
func (*ReadOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{7}
}

func (m *ReadOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptions.Unmarshal(m, b)
}
func (m *ReadOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptions.Marshal(b, m, deterministic)
}
func (m *ReadOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptions.Merge(m, src)
}
func (m *ReadOptions) XXX_Size() int {
	return xxx_messageInfo_ReadOptions.Size(m)
}
func (m *ReadOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptions proto.InternalMessageInfo

func (m *ReadOptions) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ReadOptions) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ReadOptions) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ReadOptions) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type ReadRequest struct {
	Options              *ReadOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{8}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetOptions() *ReadOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type ReadResponse struct {
	Services             []*Service `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{9}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

type DeleteOptions struct {
	// namespace of the service
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteOptions) Reset()         { *m = DeleteOptions{} }
func (m *DeleteOptions) String() string { return proto.CompactTextString(m) }
func (*DeleteOptions) ProtoMessage()    {}
func (*DeleteOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{10}
}

func (m *DeleteOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteOptions.Unmarshal(m, b)
}
func (m *DeleteOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteOptions.Marshal(b, m, deterministic)
}
func (m *DeleteOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteOptions.Merge(m, src)
}
func (m *DeleteOptions) XXX_Size() int {
	return xxx_messageInfo_DeleteOptions.Size(m)
}
func (m *DeleteOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteOptions proto.InternalMessageInfo

func (m *DeleteOptions) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type DeleteRequest struct {
	Resource             *Resource      `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Options              *DeleteOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{11}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *DeleteRequest) GetOptions() *DeleteOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type DeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{12}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

type UpdateOptions struct {
	// namespace of the service
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// entrypoint within the source
	Entrypoint           string   `protobuf:"bytes,2,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateOptions) Reset()         { *m = UpdateOptions{} }
func (m *UpdateOptions) String() string { return proto.CompactTextString(m) }
func (*UpdateOptions) ProtoMessage()    {}
func (*UpdateOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{13}
}

func (m *UpdateOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOptions.Unmarshal(m, b)
}
func (m *UpdateOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOptions.Marshal(b, m, deterministic)
}
func (m *UpdateOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOptions.Merge(m, src)
}
func (m *UpdateOptions) XXX_Size() int {
	return xxx_messageInfo_UpdateOptions.Size(m)
}
func (m *UpdateOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOptions.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOptions proto.InternalMessageInfo

func (m *UpdateOptions) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UpdateOptions) GetEntrypoint() string {
	if m != nil {
		return m.Entrypoint
	}
	return ""
}

type UpdateRequest struct {
	Resource             *Resource      `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Options              *UpdateOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{14}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *UpdateRequest) GetOptions() *UpdateOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type UpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{15}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

type ListOptions struct {
	// namespace of the service
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOptions) Reset()         { *m = ListOptions{} }
func (m *ListOptions) String() string { return proto.CompactTextString(m) }
func (*ListOptions) ProtoMessage()    {}
func (*ListOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{16}
}

func (m *ListOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOptions.Unmarshal(m, b)
}
func (m *ListOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOptions.Marshal(b, m, deterministic)
}
func (m *ListOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOptions.Merge(m, src)
}
func (m *ListOptions) XXX_Size() int {
	return xxx_messageInfo_ListOptions.Size(m)
}
func (m *ListOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ListOptions proto.InternalMessageInfo

func (m *ListOptions) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type ListRequest struct {
	Options              *ListOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{17}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetOptions() *ListOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type ListResponse struct {
	Services             []*Service `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{18}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

type LogsOptions struct {
	// namespace of the service
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogsOptions) Reset()         { *m = LogsOptions{} }
func (m *LogsOptions) String() string { return proto.CompactTextString(m) }
func (*LogsOptions) ProtoMessage()    {}
func (*LogsOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{19}
}

func (m *LogsOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogsOptions.Unmarshal(m, b)
}
func (m *LogsOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogsOptions.Marshal(b, m, deterministic)
}
func (m *LogsOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogsOptions.Merge(m, src)
}
func (m *LogsOptions) XXX_Size() int {
	return xxx_messageInfo_LogsOptions.Size(m)
}
func (m *LogsOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_LogsOptions.DiscardUnknown(m)
}

var xxx_messageInfo_LogsOptions proto.InternalMessageInfo

func (m *LogsOptions) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type LogsRequest struct {
	// service to request logs for
	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// stream records continuously
	Stream bool `protobuf:"varint,2,opt,name=stream,proto3" json:"stream,omitempty"`
	// count of records to request
	Count int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	// relative time in seconds
	// before the current time
	// from which to show logs
	Since int64 `protobuf:"varint,4,opt,name=since,proto3" json:"since,omitempty"`
	// options to use
	Options              *LogsOptions `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LogsRequest) Reset()         { *m = LogsRequest{} }
func (m *LogsRequest) String() string { return proto.CompactTextString(m) }
func (*LogsRequest) ProtoMessage()    {}
func (*LogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{20}
}

func (m *LogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogsRequest.Unmarshal(m, b)
}
func (m *LogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogsRequest.Marshal(b, m, deterministic)
}
func (m *LogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogsRequest.Merge(m, src)
}
func (m *LogsRequest) XXX_Size() int {
	return xxx_messageInfo_LogsRequest.Size(m)
}
func (m *LogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogsRequest proto.InternalMessageInfo

func (m *LogsRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *LogsRequest) GetStream() bool {
	if m != nil {
		return m.Stream
	}
	return false
}

func (m *LogsRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *LogsRequest) GetSince() int64 {
	if m != nil {
		return m.Since
	}
	return 0
}

func (m *LogsRequest) GetOptions() *LogsOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type LogRecord struct {
	// timestamp of log record
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// record metadata
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// message
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogRecord) Reset()         { *m = LogRecord{} }
func (m *LogRecord) String() string { return proto.CompactTextString(m) }
func (*LogRecord) ProtoMessage()    {}
func (*LogRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{21}
}

func (m *LogRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRecord.Unmarshal(m, b)
}
func (m *LogRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRecord.Marshal(b, m, deterministic)
}
func (m *LogRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRecord.Merge(m, src)
}
func (m *LogRecord) XXX_Size() int {
	return xxx_messageInfo_LogRecord.Size(m)
}
func (m *LogRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRecord.DiscardUnknown(m)
}

var xxx_messageInfo_LogRecord proto.InternalMessageInfo

func (m *LogRecord) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *LogRecord) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *LogRecord) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UploadRequest struct {
	Service              *Service `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{22}
}

func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (m *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(m, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func (m *UploadRequest) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *UploadRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type UploadResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadResponse) Reset()         { *m = UploadResponse{} }
func (m *UploadResponse) String() string { return proto.CompactTextString(m) }
func (*UploadResponse) ProtoMessage()    {}
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{23}
}

func (m *UploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadResponse.Unmarshal(m, b)
}
func (m *UploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadResponse.Marshal(b, m, deterministic)
}
func (m *UploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadResponse.Merge(m, src)
}
func (m *UploadResponse) XXX_Size() int {
	return xxx_messageInfo_UploadResponse.Size(m)
}
func (m *UploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadResponse proto.InternalMessageInfo

func (m *UploadResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type BuildReadResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildReadResponse) Reset()         { *m = BuildReadResponse{} }
func (m *BuildReadResponse) String() string { return proto.CompactTextString(m) }
func (*BuildReadResponse) ProtoMessage()    {}
func (*BuildReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab2d388759451feb, []int{24}
}

func (m *BuildReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildReadResponse.Unmarshal(m, b)
}
func (m *BuildReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildReadResponse.Marshal(b, m, deterministic)
}
func (m *BuildReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildReadResponse.Merge(m, src)
}
func (m *BuildReadResponse) XXX_Size() int {
	return xxx_messageInfo_BuildReadResponse.Size(m)
}
func (m *BuildReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuildReadResponse proto.InternalMessageInfo

func (m *BuildReadResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Resource)(nil), "runtime.Resource")
	proto.RegisterType((*Namespace)(nil), "runtime.Namespace")
	proto.RegisterType((*NetworkPolicy)(nil), "runtime.NetworkPolicy")
	proto.RegisterMapType((map[string]string)(nil), "runtime.NetworkPolicy.AllowedlabelsEntry")
	proto.RegisterType((*Service)(nil), "runtime.Service")
	proto.RegisterMapType((map[string]string)(nil), "runtime.Service.MetadataEntry")
	proto.RegisterType((*CreateOptions)(nil), "runtime.CreateOptions")
	proto.RegisterMapType((map[string]string)(nil), "runtime.CreateOptions.SecretsEntry")
	proto.RegisterMapType((map[string]string)(nil), "runtime.CreateOptions.VolumesEntry")
	proto.RegisterType((*CreateRequest)(nil), "runtime.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "runtime.CreateResponse")
	proto.RegisterType((*ReadOptions)(nil), "runtime.ReadOptions")
	proto.RegisterType((*ReadRequest)(nil), "runtime.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "runtime.ReadResponse")
	proto.RegisterType((*DeleteOptions)(nil), "runtime.DeleteOptions")
	proto.RegisterType((*DeleteRequest)(nil), "runtime.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "runtime.DeleteResponse")
	proto.RegisterType((*UpdateOptions)(nil), "runtime.UpdateOptions")
	proto.RegisterType((*UpdateRequest)(nil), "runtime.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "runtime.UpdateResponse")
	proto.RegisterType((*ListOptions)(nil), "runtime.ListOptions")
	proto.RegisterType((*ListRequest)(nil), "runtime.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "runtime.ListResponse")
	proto.RegisterType((*LogsOptions)(nil), "runtime.LogsOptions")
	proto.RegisterType((*LogsRequest)(nil), "runtime.LogsRequest")
	proto.RegisterType((*LogRecord)(nil), "runtime.LogRecord")
	proto.RegisterMapType((map[string]string)(nil), "runtime.LogRecord.MetadataEntry")
	proto.RegisterType((*UploadRequest)(nil), "runtime.UploadRequest")
	proto.RegisterType((*UploadResponse)(nil), "runtime.UploadResponse")
	proto.RegisterType((*BuildReadResponse)(nil), "runtime.BuildReadResponse")
}

func init() { proto.RegisterFile("runtime/runtime.proto", fileDescriptor_ab2d388759451feb) }

var fileDescriptor_ab2d388759451feb = []byte{
	// 1006 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xcd, 0x8e, 0xdc, 0x44,
	0x10, 0x5e, 0xdb, 0xf3, 0x5b, 0xbb, 0x13, 0x6d, 0x5a, 0x49, 0xb0, 0x46, 0x51, 0x18, 0x99, 0x03,
	0x43, 0x20, 0xb3, 0xcb, 0x04, 0xa4, 0x68, 0x7f, 0x24, 0x12, 0x40, 0x5c, 0x12, 0x16, 0xf5, 0x0a,
	0x0e, 0xdc, 0xbc, 0x76, 0x6b, 0xb0, 0x62, 0xbb, 0x8d, 0xbb, 0x3d, 0xd1, 0x3e, 0x0b, 0x77, 0x6e,
	0xbc, 0x02, 0x37, 0xde, 0x80, 0x07, 0xe0, 0x51, 0x50, 0xff, 0xd9, 0x6e, 0x3b, 0x59, 0xcd, 0x42,
	0x2e, 0x3b, 0x5d, 0xe5, 0xfa, 0xf9, 0xbe, 0xaa, 0xea, 0xf2, 0x1a, 0xee, 0x97, 0x55, 0xce, 0x93,
	0x8c, 0x1c, 0xe9, 0xdf, 0x55, 0x51, 0x52, 0x4e, 0xd1, 0x58, 0x8b, 0xc1, 0xef, 0x0e, 0x4c, 0x30,
	0x61, 0xb4, 0x2a, 0x23, 0x82, 0x8e, 0x61, 0x9a, 0x87, 0x19, 0x61, 0x45, 0x18, 0x11, 0xdf, 0x59,
	0x38, 0xcb, 0xfd, 0x35, 0x5a, 0x19, 0xc7, 0xef, 0xcd, 0x13, 0xdc, 0x18, 0xa1, 0x33, 0x98, 0xe5,
	0x84, 0xbf, 0xa1, 0xe5, 0xeb, 0x82, 0xa6, 0x49, 0x74, 0xed, 0xbb, 0xd2, 0xeb, 0x41, 0xe3, 0xa5,
	0x9e, 0xfe, 0x20, 0x9f, 0x62, 0xdb, 0x18, 0x3d, 0x86, 0x31, 0x23, 0xe5, 0x36, 0x89, 0x88, 0xef,
	0x49, 0xbf, 0xc3, 0xda, 0xef, 0x52, 0xe9, 0xb1, 0x31, 0x08, 0x3e, 0x84, 0x69, 0x8d, 0x00, 0x21,
	0x18, 0x08, 0x0c, 0x12, 0xe3, 0x14, 0xcb, 0x73, 0xf0, 0xb7, 0x03, 0x33, 0x2b, 0x1b, 0xba, 0x80,
	0x59, 0x98, 0xa6, 0xf4, 0x0d, 0x89, 0xd3, 0xf0, 0x8a, 0xa4, 0xcc, 0x77, 0x16, 0xde, 0x72, 0x7f,
	0xfd, 0xc9, 0xdb, 0xc1, 0xad, 0x9e, 0xb7, 0x6d, 0xbf, 0xcd, 0x79, 0x79, 0x8d, 0x6d, 0xff, 0x3a,
	0xad, 0xdb, 0xa4, 0x45, 0x0f, 0xdb, 0x35, 0xf3, 0xe4, 0x83, 0x46, 0x31, 0xff, 0x0a, 0x50, 0x3f,
	0x2c, 0x3a, 0x04, 0xef, 0x35, 0xb9, 0xd6, 0xe8, 0xc5, 0x11, 0xdd, 0x83, 0xe1, 0x36, 0x4c, 0x2b,
	0x13, 0x5a, 0x09, 0x27, 0xee, 0x33, 0x27, 0xf8, 0xc7, 0x81, 0xb1, 0x2e, 0xc6, 0xdb, 0x68, 0x23,
	0x1f, 0xc6, 0x5b, 0x52, 0xb2, 0x84, 0xe6, 0xda, 0xd7, 0x88, 0xe8, 0x01, 0x8c, 0x54, 0x5f, 0x35,
	0x2c, 0x2d, 0xa1, 0x13, 0x98, 0x64, 0x84, 0x87, 0x71, 0xc8, 0x43, 0x7f, 0x20, 0x2b, 0xf2, 0xa8,
	0x5b, 0xf6, 0xd5, 0x2b, 0x6d, 0xa0, 0xca, 0x50, 0xdb, 0xcb, 0x98, 0x3c, 0xe4, 0x15, 0xf3, 0x87,
	0x0b, 0x67, 0x39, 0xc4, 0x5a, 0x9a, 0x9f, 0xc2, 0xcc, 0x72, 0xb9, 0x15, 0xc5, 0xbf, 0x3c, 0x98,
	0x7d, 0x5d, 0x92, 0x90, 0x93, 0x8b, 0x82, 0x27, 0x34, 0x67, 0x82, 0x54, 0x44, 0xb3, 0x2c, 0xcc,
	0x63, 0xd9, 0xb3, 0x29, 0x36, 0xa2, 0x28, 0x41, 0x58, 0x6e, 0x98, 0xef, 0x4a, 0xb5, 0x3c, 0x8b,
	0x5c, 0x24, 0xdf, 0xfa, 0x9e, 0x54, 0x89, 0xa3, 0x80, 0x49, 0x2b, 0x5e, 0x54, 0xdc, 0x1f, 0x28,
	0xea, 0x4a, 0x12, 0xde, 0xfc, 0xba, 0x20, 0x12, 0xfc, 0x14, 0xcb, 0xb3, 0xc0, 0x95, 0x64, 0xe1,
	0x86, 0xf8, 0x23, 0x85, 0x4b, 0x0a, 0x76, 0x5b, 0xc7, 0x9d, 0xb6, 0xa2, 0x73, 0x31, 0xb8, 0x51,
	0x49, 0x38, 0xf3, 0x27, 0xb2, 0x82, 0x1f, 0xd5, 0x15, 0xb4, 0x88, 0xac, 0x2e, 0x95, 0x95, 0x2a,
	0xa3, 0xf1, 0x41, 0x8f, 0x00, 0x88, 0xd0, 0x14, 0x34, 0xc9, 0xb9, 0x3f, 0x95, 0xd1, 0x5b, 0x1a,
	0x11, 0x7e, 0x4b, 0xd3, 0x2a, 0x23, 0xcc, 0x87, 0x1b, 0xc3, 0xff, 0xa4, 0xac, 0x74, 0x78, 0xed,
	0x33, 0x3f, 0x81, 0x83, 0x76, 0xde, 0xdb, 0xf4, 0x42, 0xf8, 0xb6, 0x83, 0xde, 0xaa, 0x8f, 0x85,
	0x69, 0x23, 0x26, 0xbf, 0x56, 0x84, 0x71, 0xf4, 0x04, 0x26, 0xa5, 0xde, 0x2d, 0x7a, 0x9d, 0xdc,
	0xad, 0x89, 0x98, 0xa5, 0x83, 0x6b, 0x13, 0x74, 0x0c, 0x63, 0xaa, 0x88, 0xf5, 0xd6, 0x88, 0x45,
	0x1b, 0x1b, 0xb3, 0xe0, 0x10, 0xee, 0x98, 0x8c, 0xac, 0xa0, 0x39, 0x23, 0x01, 0x83, 0x7d, 0x4c,
	0xc2, 0xb8, 0x35, 0x48, 0x66, 0xc3, 0x28, 0x0a, 0x46, 0xbc, 0xe1, 0xde, 0x98, 0x21, 0xf1, 0x5a,
	0x43, 0x62, 0x8d, 0xc3, 0xa0, 0x33, 0x0e, 0xc1, 0xb9, 0x4a, 0x6a, 0x68, 0xaf, 0x1a, 0x1e, 0x8a,
	0xf5, 0xbd, 0x16, 0xeb, 0x1a, 0x5b, 0xc3, 0xe2, 0x0c, 0x0e, 0x94, 0xbb, 0xe2, 0x80, 0x3e, 0x83,
	0x89, 0x46, 0x69, 0x56, 0x56, 0x7f, 0x2f, 0xd6, 0x16, 0xc1, 0x13, 0x98, 0x7d, 0x43, 0x52, 0xd2,
	0x5c, 0x9e, 0x87, 0xdd, 0x2d, 0x6e, 0x61, 0x2d, 0x8c, 0xf9, 0xfb, 0x6f, 0x92, 0x05, 0xc3, 0x6a,
	0x92, 0xc9, 0xa8, 0x9b, 0xf4, 0x0a, 0x66, 0x3f, 0x16, 0x71, 0xb8, 0x23, 0xe4, 0xce, 0x75, 0x71,
	0xbb, 0xd7, 0x45, 0x50, 0x52, 0xe1, 0xde, 0x3f, 0x25, 0x0b, 0xa6, 0x45, 0xc9, 0x64, 0xd4, 0x94,
	0x3e, 0x85, 0xfd, 0x97, 0x09, 0xe3, 0xbb, 0xf5, 0xe0, 0x5c, 0x19, 0xef, 0x30, 0x2f, 0xad, 0x98,
	0xd6, 0xbc, 0x28, 0xf7, 0xff, 0x34, 0x2f, 0x02, 0x29, 0xdd, 0xb0, 0xdd, 0x90, 0xfe, 0xe6, 0x28,
	0x6b, 0x03, 0xf5, 0xdd, 0xf7, 0x49, 0xbe, 0x19, 0x4a, 0x12, 0x66, 0xb2, 0x86, 0x13, 0xac, 0x25,
	0xb1, 0x2e, 0x22, 0x5a, 0xe5, 0x5c, 0x5e, 0x27, 0x0f, 0x2b, 0x41, 0x68, 0x59, 0x92, 0xeb, 0xbb,
	0xe4, 0x61, 0x25, 0xb4, 0x0b, 0x31, 0xec, 0x16, 0xa2, 0x81, 0xdc, 0x14, 0xe2, 0x4f, 0x07, 0xa6,
	0x2f, 0xe9, 0x06, 0x93, 0x88, 0x96, 0xb1, 0x60, 0x22, 0x4c, 0x19, 0x0f, 0xb3, 0x42, 0xa2, 0xf3,
	0x70, 0xa3, 0x40, 0x67, 0xad, 0xb7, 0x9e, 0x2b, 0x8b, 0xb4, 0x68, 0x07, 0x57, 0x31, 0xde, 0xf9,
	0xde, 0xf3, 0x61, 0x9c, 0x11, 0xc6, 0xc4, 0x6b, 0x42, 0xad, 0x05, 0x23, 0xfe, 0xbf, 0x37, 0xdf,
	0x85, 0x98, 0xdc, 0x94, 0x36, 0xab, 0xe3, 0xb1, 0x5d, 0xdf, 0x9b, 0xfe, 0x23, 0x12, 0x7b, 0x4a,
	0xb3, 0x71, 0x96, 0x07, 0x58, 0x9e, 0x83, 0x85, 0x18, 0x4c, 0x15, 0x50, 0x0f, 0xc7, 0x1d, 0x70,
	0x93, 0x58, 0xa3, 0x71, 0x93, 0x38, 0xf8, 0x18, 0xee, 0xbe, 0xa8, 0x92, 0x34, 0xb6, 0x36, 0x8e,
	0x09, 0xe5, 0x34, 0xa1, 0xd6, 0x7f, 0xb8, 0x30, 0xc6, 0x2a, 0x37, 0x3a, 0x85, 0x91, 0xda, 0xb3,
	0xa8, 0xbb, 0x92, 0x35, 0xf0, 0xf9, 0x07, 0x3d, 0xbd, 0xbe, 0x18, 0x7b, 0xe8, 0x4b, 0x18, 0x88,
	0x64, 0xc8, 0xde, 0x82, 0xc6, 0xf1, 0x7e, 0x47, 0x5b, 0xbb, 0x9d, 0xc2, 0x48, 0xad, 0x0d, 0xd4,
	0xdd, 0x30, 0xfd, 0x9c, 0x9d, 0xfd, 0x22, 0x9d, 0xd5, 0x05, 0x45, 0xdd, 0xbb, 0xdc, 0x77, 0xee,
	0xdc, 0xe4, 0x3d, 0xf4, 0x05, 0x0c, 0xc4, 0xb8, 0x21, 0x7b, 0xfa, 0x8c, 0x23, 0xea, 0x8f, 0x4d,
	0xb0, 0x77, 0xec, 0xac, 0xbf, 0x83, 0xd1, 0xa5, 0xda, 0x27, 0xe7, 0x22, 0xb9, 0x68, 0x82, 0x95,
	0xbc, 0xd5, 0x66, 0x2b, 0x79, 0xbb, 0x5b, 0xc1, 0xde, 0xd2, 0x59, 0x3f, 0x87, 0xa1, 0xec, 0x10,
	0x7a, 0xa6, 0x0b, 0xd7, 0x9b, 0x81, 0xf9, 0xbc, 0xd6, 0xf4, 0x7a, 0x29, 0xb0, 0xbc, 0xf8, 0xfc,
	0xe7, 0xa3, 0x4d, 0xc2, 0x7f, 0xa9, 0xae, 0x56, 0x11, 0xcd, 0x8e, 0xb2, 0x24, 0x2a, 0xa9, 0xfe,
	0xbb, 0x7d, 0x7a, 0x24, 0xbf, 0x00, 0xcc, 0xf7, 0xc0, 0xa9, 0xfe, 0xbd, 0x1a, 0x49, 0xf5, 0xd3,
	0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xcd, 0xd6, 0x19, 0x5d, 0x31, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RuntimeClient is the client API for Runtime service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RuntimeClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	Logs(ctx context.Context, in *LogsRequest, opts ...grpc.CallOption) (Runtime_LogsClient, error)
}

type runtimeClient struct {
	cc *grpc.ClientConn
}

func NewRuntimeClient(cc *grpc.ClientConn) RuntimeClient {
	return &runtimeClient{cc}
}

func (c *runtimeClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/runtime.Runtime/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := c.cc.Invoke(ctx, "/runtime.Runtime/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/runtime.Runtime/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/runtime.Runtime/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeClient) Logs(ctx context.Context, in *LogsRequest, opts ...grpc.CallOption) (Runtime_LogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Runtime_serviceDesc.Streams[0], "/runtime.Runtime/Logs", opts...)
	if err != nil {
		return nil, err
	}
	x := &runtimeLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Runtime_LogsClient interface {
	Recv() (*LogRecord, error)
	grpc.ClientStream
}

type runtimeLogsClient struct {
	grpc.ClientStream
}

func (x *runtimeLogsClient) Recv() (*LogRecord, error) {
	m := new(LogRecord)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RuntimeServer is the server API for Runtime service.
type RuntimeServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	Logs(*LogsRequest, Runtime_LogsServer) error
}

func RegisterRuntimeServer(s *grpc.Server, srv RuntimeServer) {
	s.RegisterService(&_Runtime_serviceDesc, srv)
}

func _Runtime_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/runtime.Runtime/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Runtime_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/runtime.Runtime/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Runtime_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/runtime.Runtime/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Runtime_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/runtime.Runtime/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Runtime_Logs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(LogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RuntimeServer).Logs(m, &runtimeLogsServer{stream})
}

type Runtime_LogsServer interface {
	Send(*LogRecord) error
	grpc.ServerStream
}

type runtimeLogsServer struct {
	grpc.ServerStream
}

func (x *runtimeLogsServer) Send(m *LogRecord) error {
	return x.ServerStream.SendMsg(m)
}

var _Runtime_serviceDesc = grpc.ServiceDesc{
	ServiceName: "runtime.Runtime",
	HandlerType: (*RuntimeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Runtime_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _Runtime_Read_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Runtime_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Runtime_Update_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Logs",
			Handler:       _Runtime_Logs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "runtime/runtime.proto",
}

// SourceClient is the client API for Source service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SourceClient interface {
	Upload(ctx context.Context, opts ...grpc.CallOption) (Source_UploadClient, error)
}

type sourceClient struct {
	cc *grpc.ClientConn
}

func NewSourceClient(cc *grpc.ClientConn) SourceClient {
	return &sourceClient{cc}
}

func (c *sourceClient) Upload(ctx context.Context, opts ...grpc.CallOption) (Source_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Source_serviceDesc.Streams[0], "/runtime.Source/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &sourceUploadClient{stream}
	return x, nil
}

type Source_UploadClient interface {
	Send(*UploadRequest) error
	CloseAndRecv() (*UploadResponse, error)
	grpc.ClientStream
}

type sourceUploadClient struct {
	grpc.ClientStream
}

func (x *sourceUploadClient) Send(m *UploadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sourceUploadClient) CloseAndRecv() (*UploadResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SourceServer is the server API for Source service.
type SourceServer interface {
	Upload(Source_UploadServer) error
}

func RegisterSourceServer(s *grpc.Server, srv SourceServer) {
	s.RegisterService(&_Source_serviceDesc, srv)
}

func _Source_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SourceServer).Upload(&sourceUploadServer{stream})
}

type Source_UploadServer interface {
	SendAndClose(*UploadResponse) error
	Recv() (*UploadRequest, error)
	grpc.ServerStream
}

type sourceUploadServer struct {
	grpc.ServerStream
}

func (x *sourceUploadServer) SendAndClose(m *UploadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sourceUploadServer) Recv() (*UploadRequest, error) {
	m := new(UploadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Source_serviceDesc = grpc.ServiceDesc{
	ServiceName: "runtime.Source",
	HandlerType: (*SourceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _Source_Upload_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "runtime/runtime.proto",
}

// BuildClient is the client API for Build service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BuildClient interface {
	Read(ctx context.Context, in *Service, opts ...grpc.CallOption) (Build_ReadClient, error)
}

type buildClient struct {
	cc *grpc.ClientConn
}

func NewBuildClient(cc *grpc.ClientConn) BuildClient {
	return &buildClient{cc}
}

func (c *buildClient) Read(ctx context.Context, in *Service, opts ...grpc.CallOption) (Build_ReadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Build_serviceDesc.Streams[0], "/runtime.Build/Read", opts...)
	if err != nil {
		return nil, err
	}
	x := &buildReadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Build_ReadClient interface {
	Recv() (*BuildReadResponse, error)
	grpc.ClientStream
}

type buildReadClient struct {
	grpc.ClientStream
}

func (x *buildReadClient) Recv() (*BuildReadResponse, error) {
	m := new(BuildReadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BuildServer is the server API for Build service.
type BuildServer interface {
	Read(*Service, Build_ReadServer) error
}

func RegisterBuildServer(s *grpc.Server, srv BuildServer) {
	s.RegisterService(&_Build_serviceDesc, srv)
}

func _Build_Read_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Service)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BuildServer).Read(m, &buildReadServer{stream})
}

type Build_ReadServer interface {
	Send(*BuildReadResponse) error
	grpc.ServerStream
}

type buildReadServer struct {
	grpc.ServerStream
}

func (x *buildReadServer) Send(m *BuildReadResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Build_serviceDesc = grpc.ServiceDesc{
	ServiceName: "runtime.Build",
	HandlerType: (*BuildServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Read",
			Handler:       _Build_Read_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "runtime/runtime.proto",
}
